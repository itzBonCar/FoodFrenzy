### Imp git commands 
$ git remote add origin <repo-url>


$ git init
$ git clone <url>
$ git config --global user.email "92singh.yuvraj@gmail.com"
$ git status
$ git add .
$ git commit -m "message"
$ git push origin main
$ git pull origin main

$ git branch
$ git branch <new-branch-name>
$ git checkout <branch-name>
$ git checkout -b <new-branch-name>
$ git merge <branch-to-merge>


#### Imp docker commands

$ docker login
$ docker tag <image-name>:latest itzboncar/<image-name>:latest
$ docker push itzboncar/<image-name>:latest
$ docker pull itzboncar/<image-name>:latest
$ docker build -t <image-name>:latest .
$ docker build -f Dockerfile.mysql -t <image-name>:latest .
$ docker run --name foodfrenzycontainer8 -d -p 9090:8080 -e SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/food_frenzy_db -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=carbon123 foodfrenzyimage:v01
$ docker ps 
$ docker ps -a 
$ docker images

$ docker exec -it <container-name> mysql -u root -p
>SHOW DATABASES;
USE food_frenzy_db;
SHOW TABLES;
SELECT * FROM admin;

$ docker logs <container-name>



#### Dockerize the application by creating Docker image using Dockerfile
Build the image with the following command and then run docker container for it

$ docker build -t foodfrenzyimage:v01 .

$ docker run --name foodfrenzycontainer8 -d -p 9090:8080 -e SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/food_frenzy_db -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=carbon123 foodfrenzyimage:v01

Above command used db that is locally hosted. But to have our db run inside a container we need docker-compose.yml and run the db container along with app container

Created docker-compose.yml with 2 containers mysql and application
Had to choose right mysql version to make sure the already loaded mysqldump.sql runs at dockerentrypoint.db


### CREATING CUSTOM MYSQL IMAGE WITH DUMP ADDED (not preferred). ALso push it onto dockerhub
create Dockerfile.mysql (2nd Dockerfile)

Pass secrets at runtime or create .env file(check next section)
docker run -d \
  --name mysqlsecure \
  -e MYSQL_ROOT_PASSWORD=carbon123 \
  -e MYSQL_DATABASE=food_frenzy_db \
  -e MYSQL_USER=carbon \
  -e MYSQL_PASSWORD=carbon123 \
  itzboncar/food_frenzy_mysql:latest

### PUSH it to DOCKERHUB
    $ docker build -f Dockerfile.mysql -t food_frenzy_mysql:latest .
    $ docker login
    $ docker tag food_frenzy_mysql:latest itzboncar/food_frenzy_mysql:latest
    $ docker push itzboncar/food_frenzy_mysql:latest

### Docker-compose pulls env vars from .env file (which is not supposed to be loaded onto github)
create and load .env file with secrets

$ docker-compose up -d --build

If .env file in different folder
$ docker-compose up --env-file ./config/myenv -d --build

Also,
$ docker-compose down -v (remove volumes too, wipes db)
$ docker-compose down --rmi all (removes all images)


.env is put in gitignore

### DEPLOY TO LOCAL K8S cluster



##### NEXT GOALS:
Deploy it in local k8s cluster
Make it secure
create helm chart
create terraform script
Create a Jenkins pipeline